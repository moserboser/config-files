# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# Recommends: foot
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
set $rofi_cmd rofi \
        -terminal '$term'
# Shows a combined list of the applications with desktop files and
# executables from PATH.
set $menu $rofi_cmd -show combi -combi-modes drun#run -modes combi

#displaying open applications with rofi
bindsym $mod+Tab exec --no-startup-id ~/.config/rofi/launchers/type-1/launcher.sh 


### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
set $wallpaper wal -i $HOME/Pictures/backgrounds/nordic_wallpapers/ign_unsplash46.png

#default red
#output * bg $HOME/Pictures/backgrounds/catpuchin/red_bkg5.png fill
#exec wal -i $HOME/Pictures/backgrounds/catpuchin/red_bkg5.png

#
output * bg $HOME/Pictures/backgrounds/street_blues.png fill
exec wal -i $HOME/Pictures/backgrounds/street_blues.png

# Example configuration
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

    output DP-3 resolution 1920x1080@165Hz  position 1920,0


### Input configuration
#You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# to get all the available inputs, check out `man 7 xkeyboard-config`
# same command for keys for changing layouts.
# a few examples from the man pages below:

#       │ grp:alt_space_toggle        Alt+Space                                                                                                                                                                                                                                                                        │
#       │ grp:win_space_toggle        Win+Space                                                                                                                                                                                                                                                                        │
#       │ grp:ctrl_space_toggle       Ctrl+Space
# get the available inputs with: swaymsg -t get_inputs

# touchpad configureation
input "type:touchpad" {
    dwt enabled
    dwtp enabled
    tap enabled
    tap_button_map lrm
  }



# Us international layout for split keyboard
#input type:keyboard {
#    xkb_layout us
#    xkb_variant intl
#}

# layout switching between ch and us-int when pressing alt and space together
input type:keyboard {
    xkb_layout us,ch
    xkb_variant intl,
    xkb_options grp:alt_space_toggle
}



### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# screen temperature adjustment - requires both gammastep and gammastep-indicator
# IMPORTANT: The location has to be configured manually on fedorra sway. Also, the adjustment mode has to be set to wayland 
# optionally, commands for the location can be executed manually (see man gammastep)
exec gammastep 
exec gammastep-indicator

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec  --no-startup-id ~/.config/rofi/launchers/type-1/launcher.sh 

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)



# Exit menu
bindsym $mod+Shift+e exec swaynag -m 'What would you like to do?' \
-b 'Suspend' 'systemctl suspend' \
-b 'Exit' 'swaymsg exit' \
-b 'Reboot' 'systemctl reboot' \
-b 'Power Off' 'systemctl poweroff'\

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    #screenshot shortcut - other settings in /config.d/60-bindings-screenshot.conf 
   bindsym Print exec $HOME/.config/sway/scripts/sway-interactive-screenshot/sway-interactive-screenshot

# Workspaces:
#

# Names for workspaces for reference

set $workspace1 "1:  "
set $workspace2 "2:  "
set $workspace3 "3:  "
set $workspace4 "4:  "
set $workspace5 "5:  "
set $workspace6 "6:  "
set $workspace7 "7:  "
set $workspace8 "8:  "
set $workspace9 "9:  "
set $workspace10 "10:  "



    # switch to workspace
    bindsym $mod+1 workspace $workspace1
    bindsym $mod+2 workspace $workspace2
    bindsym $mod+3 workspace $workspace3
    bindsym $mod+4 workspace $workspace4
    bindsym $mod+5 workspace $workspace5
    bindsym $mod+6 workspace $workspace6
    bindsym $mod+7 workspace $workspace7
    bindsym $mod+8 workspace $workspace8
    bindsym $mod+9 workspace $workspace9
    bindsym $mod+0 workspace $workspace10
    # move focused container to workspace
    bindsym $mod+shift+1 move container to workspace $workspace1
    bindsym $mod+shift+2 move container to workspace $workspace2
    bindsym $mod+shift+3 move container to workspace $workspace3
    bindsym $mod+shift+4 move container to workspace $workspace4
    bindsym $mod+shift+5 move container to workspace $workspace5
    bindsym $mod+shift+6 move container to workspace $workspace6
    bindsym $mod+shift+7 move container to workspace $workspace7
    bindsym $mod+shift+8 move container to workspace $workspace8
    bindsym $mod+shift+9 move container to workspace $workspace9
    bindsym $mod+shift+0 move container to workspace $workspace10
    # note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#
# Assigning clients to workspaces
#

# You can get the window aoo id with `swaymsg -t get_tree`
# for xorg application (like spotify or vs code) you can alternatively assign the class which you get with `xprop`

assign [class="Spotify"] $workspace10
assign [app_id="org.mozilla.firefox"] $workspace2
# editor
assign [app_id="dev.zed.Zed-Dev"] $workspace3
assign [class="Code"] $workspace3
# File manager
assign [app_id="thunar"] $workspace5
assign [app_id="org.kde.dolphin"] $workspace5
# Notes 
assign [class="obsidian"] $workspace4
assign [class="Logseq"] $workspace4
# Conditions for opening Windows
#
# opening Alacritty with 30% screen sace
for_window [app_id="Alacritty"] resize set width 30 ppt
# opening windows in floating mode in the middle of the screen
for_window [app_id="gpick"] floating enable, resize set 800 600 
#Setting opacity 

set $opacity 0.9
for_window [app_id="org.kde.dolphin"] opacity $opacity

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+Return floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# -- Styling sway --- #

# additional commands to load gtk3 themes properly (For themes configured in lxapearance)

set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme 'Arc-Dark-solid'
    gsettings set $gnome-schema icon-theme 'Colloid-yellow-nord-dark' #insert your gtk theme here
    gsettings set $gnome-schema cursor-theme 'Breeze Dark' #insert your gtk theme here
    gsettings set $gnome-schema font-name 'Cascadia Code NF 10'
}


# font

font pango:HackNerdFont 10
smart_gaps off 
gaps inner 4 
default_border pixel



#define color palette
#just in case they are needed sometime

#nord polar night colors
set $nord_dark #292e39
set $nord_dark2	#2e3440
set $nord_dark3	#3b4252
set $nord_dark4	#434c5e
set $nord_dark5	#4c566a

#nordic aurora spectrum colors
set $aurora_red     #bf616a
set $aurora_orange	#d08770
set $aurora_yellow	#ebcb8b
set $aurora_green	#a3be8c
set $aurora_purple	#b48ead

# include custom wall colours 

include "$HOME/.cache/wal/colors-sway"
#| border | background | text | indicator | child_border
client.focused $color7 $color7 $color0 $color7 $color7 
client.focused_inactive $color0 #5f676a #ffffff #484e50 $color0 
client.focused_tab_title $color0 #5f676a #ffffff  
client.unfocused $color0 #222222 #888888 #292d2e $color0 
client.urgent #2f343a #900000 #ffffff #900000 #900000
client.placeholder #000000 #0c0c0c #ffffff #000000 #0c0c0c




# set bg based on wall colors 


# -- FEDORA specific configuration (files loading below) -- # (delete this if you are not using the fedora sway spink)

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'



